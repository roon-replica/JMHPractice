/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=51107:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/think-roon/IdeaProjects/JMHPractice/target/classes:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.2/spring-boot-starter-web-2.7.2.jar:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.2/spring-boot-starter-2.7.2.jar:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot/2.7.2/spring-boot-2.7.2.jar:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.2/spring-boot-autoconfigure-2.7.2.jar:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.2/spring-boot-starter-logging-2.7.2.jar:/Users/think-roon/.m2/repository/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar:/Users/think-roon/.m2/repository/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar:/Users/think-roon/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/think-roon/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/think-roon/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/think-roon/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/think-roon/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.2/spring-boot-starter-json-2.7.2.jar:/Users/think-roon/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/Users/think-roon/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/Users/think-roon/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/Users/think-roon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.3/jackson-datatype-jdk8-2.13.3.jar:/Users/think-roon/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.3/jackson-datatype-jsr310-2.13.3.jar:/Users/think-roon/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.3/jackson-module-parameter-names-2.13.3.jar:/Users/think-roon/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.2/spring-boot-starter-tomcat-2.7.2.jar:/Users/think-roon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.65/tomcat-embed-core-9.0.65.jar:/Users/think-roon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.65/tomcat-embed-el-9.0.65.jar:/Users/think-roon/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.65/tomcat-embed-websocket-9.0.65.jar:/Users/think-roon/.m2/repository/org/springframework/spring-web/5.3.22/spring-web-5.3.22.jar:/Users/think-roon/.m2/repository/org/springframework/spring-beans/5.3.22/spring-beans-5.3.22.jar:/Users/think-roon/.m2/repository/org/springframework/spring-webmvc/5.3.22/spring-webmvc-5.3.22.jar:/Users/think-roon/.m2/repository/org/springframework/spring-aop/5.3.22/spring-aop-5.3.22.jar:/Users/think-roon/.m2/repository/org/springframework/spring-context/5.3.22/spring-context-5.3.22.jar:/Users/think-roon/.m2/repository/org/springframework/spring-expression/5.3.22/spring-expression-5.3.22.jar:/Users/think-roon/.m2/repository/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar:/Users/think-roon/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/think-roon/.m2/repository/org/springframework/spring-core/5.3.22/spring-core-5.3.22.jar:/Users/think-roon/.m2/repository/org/springframework/spring-jcl/5.3.22/spring-jcl-5.3.22.jar:/Users/think-roon/.m2/repository/org/openjdk/jmh/jmh-core/1.33/jmh-core-1.33.jar:/Users/think-roon/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/Users/think-roon/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/Users/think-roon/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.33/jmh-generator-annprocess-1.33.jar org.roon.jmh.quickstart.BenchMarkRunner
# JMH version: 1.33
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=51107:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.roon.jmh.quickstart.BenchMarkTarget.init

# Run progress: 0.00% complete, ETA 00:05:00
# Warmup Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op

# Run progress: 33.33% complete, ETA 00:03:22
# Warmup Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op

# Run progress: 66.67% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁹ s/op
# Warmup Iteration   2: ≈ 10⁻⁹ s/op
# Warmup Iteration   3: ≈ 10⁻⁹ s/op
# Warmup Iteration   4: ≈ 10⁻⁹ s/op
# Warmup Iteration   5: ≈ 10⁻⁹ s/op
Iteration   1: ≈ 10⁻⁹ s/op
Iteration   2: ≈ 10⁻⁹ s/op
Iteration   3: ≈ 10⁻⁹ s/op
Iteration   4: ≈ 10⁻⁹ s/op
Iteration   5: ≈ 10⁻⁹ s/op


Result "org.roon.jmh.quickstart.BenchMarkTarget.init":
  ≈ 10⁻⁹ s/op


# Run complete. Total time: 00:05:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark             Mode  Cnt   Score     Error  Units
BenchMarkTarget.init  avgt    5  ≈ 10⁻⁹             s/op

Process finished with exit code 0
